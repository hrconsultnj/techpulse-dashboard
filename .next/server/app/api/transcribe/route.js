(()=>{var e={};e.id=391,e.ids=[391],e.modules={846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},3033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},4870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},6487:()=>{},6559:(e,r,t)=>{"use strict";e.exports=t(4870)},8335:()=>{},9294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")},9823:(e,r,t)=>{"use strict";t.r(r),t.d(r,{patchFetch:()=>m,routeModule:()=>u,serverHooks:()=>l,workAsyncStorage:()=>d,workUnitAsyncStorage:()=>c});var o={};t.r(o),t.d(o,{GET:()=>p,POST:()=>i});var s=t(6559),n=t(8088),a=t(7719);async function i(e){try{console.log("=== Transcription API Called ===");let r=process.env.OPENAI_API_KEY;if(!r)return console.error("OpenAI API key not configured in server environment"),Response.json({error:"OpenAI API key not configured"},{status:500});let t=(await e.formData()).get("audio");if(!t)return Response.json({error:"No audio file provided"},{status:400});if(console.log(`Transcribing audio: ${t.name} (${t.size} bytes, ${t.type})`),t.size>0x1900000)return Response.json({error:"File size too large. Maximum size is 25MB"},{status:400});let o=["audio/webm","audio/mpeg","audio/mp3","audio/wav","audio/ogg","audio/m4a","audio/mp4"],s=t.type.split(";")[0];if(!o.some(e=>e===t.type||e===s))return Response.json({error:`Unsupported file format: ${t.type}. Supported formats: ${o.join(", ")}`},{status:400});let n=new FormData;n.append("file",t),n.append("model","whisper-1"),n.append("language","en"),n.append("temperature","0.2"),console.log("\uD83C\uDF10 Calling OpenAI Whisper API directly from Next.js API route");let a=Date.now(),i=await fetch("https://api.openai.com/v1/audio/transcriptions",{method:"POST",headers:{Authorization:`Bearer ${r}`},body:n}),p=Date.now()-a;if(!i.ok){let e=await i.text();throw console.error("❌ OpenAI API error:",i.status,e),Error(`OpenAI API error: ${i.status} ${e}`)}let u=await i.json();return console.log(`✅ Secure transcription completed in ${p}ms:`,u.text.substring(0,50)+"..."),Response.json({text:u.text,language:u.language,duration:u.duration,confidence:1})}catch(e){return console.error("Transcription error:",e),Response.json({error:"Transcription failed",details:e instanceof Error?e.message:"Unknown error"},{status:500})}}async function p(){return Response.json({message:"TechPulse Transcription API",status:"active",model:"whisper-1",secure:!0})}let u=new s.AppRouteRouteModule({definition:{kind:n.RouteKind.APP_ROUTE,page:"/api/transcribe/route",pathname:"/api/transcribe",filename:"route",bundlePath:"app/api/transcribe/route"},resolvedPagePath:"/Users/helderrodrigues/Projects/techpulse-dashboard/src/app/api/transcribe/route.ts",nextConfigOutput:"",userland:o}),{workAsyncStorage:d,workUnitAsyncStorage:c,serverHooks:l}=u;function m(){return(0,a.patchFetch)({workAsyncStorage:d,workUnitAsyncStorage:c})}}};var r=require("../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),o=r.X(0,[719],()=>t(9823));module.exports=o})();